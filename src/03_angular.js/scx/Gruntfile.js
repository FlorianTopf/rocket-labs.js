'use strict';module.exports = function (grunt) {    var sourceDir = './src/';    var distScriptsDir = sourceDir + 'scripts/';    var distScripts = [        distScriptsDir + 'app.js',        distScriptsDir + 'directives/*.js',        distScriptsDir + 'services/*.js',        distScriptsDir + 'models/*.js',        distScriptsDir + 'controllers/*.js'    ];    var distStylesDir = sourceDir + 'styles/';    var distStyles = [        distStylesDir + 'scx.css'    ];    var vendorBowerDir = './bower_components/';    var vendorScriptsDir = sourceDir + 'scripts/vendor/';    var vendorScripts = [        vendorBowerDir + 'jquery/dist/jquery.js',        vendorBowerDir + 'datatables/media/js/jquery.dataTables.js',        vendorBowerDir + 'bootstrap/dist/js/bootstrap.js',        vendorBowerDir + 'angular/angular.js',        vendorBowerDir + 'angular-ui-router/release/angular-ui-router.js',        vendorBowerDir + 'angular-ui-switch/angular-ui-switch.js',        vendorBowerDir + 'angular-validation-match/dist/angular-input-match.js',        vendorBowerDir + 'angular-datatables/dist/angular-datatables.js',        vendorBowerDir + 'angular-datatables/dist/plugins/bootstrap/angular-datatables.bootstrap.min.js',        vendorBowerDir + 'angular-sanitize/angular-sanitize.js',        vendorBowerDir + 'angular-resource/angular-resource.js'    ];    var vendorStylesDir = sourceDir + 'styles/vendor/';    var vendorStyles = [        vendorBowerDir + 'bootstrap/dist/css/bootstrap.css',        vendorBowerDir + 'angular-datatables/dist/plugins/bootstrap/angular-datatables.bootstrap.min.css',        vendorBowerDir + 'angular-ui-switch/angular-ui-switch.css',        vendorBowerDir + 'components-font-awesome/css/font-awesome.css',        vendorStylesDir + 'pixel-admin.css',        vendorStylesDir + 'pages.css',        vendorStylesDir + 'widgets.css',        vendorStylesDir + 'rtl.css',        vendorStylesDir + 'themes.css'    ];    // Define the configuration for all the tasks    grunt.initConfig({        pkg: grunt.file.readJSON('./package.json'),        watch: {            dist: {                files: distScripts.concat(distStyles),                tasks: ['concat:dist', 'uglify:dist', 'cssmin:dist']            },            vendor: {                files: vendorScripts.concat(vendorStyles),                tasks: ['concat:vendor', 'uglify:vendor', 'cssmin:vendor']            }        },        concat: {            dist: {                src: distScripts,                dest: distScriptsDir + '<%= pkg.name %>.js'            },            vendor: {                src: vendorScripts,                dest: vendorScriptsDir + 'vendor.js'            }        },        uglify: {            options: {                banner: '/*! <%= pkg.name %> <%= grunt.template.today("yyyy-mm-dd") %> */\n',                mangle: false            },            dist: {                files: {                    './public/scripts/<%= pkg.name %>.min.js': distScriptsDir + '<%= pkg.name %>.js'                }            },            vendor: {                files: {                    './public/scripts/vendor/vendor.min.js': vendorScriptsDir + 'vendor.js'                }            }        },        cssmin: {            dist: {                files: {                    './public/styles/scx.min.css': distStyles                }            },            vendor: {                files: {                    './public/styles/vendor/vendor.min.css': vendorStyles                }            }        }    });    grunt.loadNpmTasks('grunt-contrib-concat');    grunt.loadNpmTasks('grunt-contrib-uglify');    grunt.loadNpmTasks('grunt-contrib-cssmin');    grunt.loadNpmTasks('grunt-contrib-watch');    // TODO register jshint and cleanup tasks later    // runs complete build and starts watcher for all files    grunt.registerTask('default', ['concat', 'uglify', 'cssmin', 'watch']);    // runs complete build with no watcher    grunt.registerTask('build', ['concat', 'uglify', 'cssmin']);    // runs only dist build and starts watcher    grunt.registerTask('dist', ['concat:dist', 'uglify:dist', 'cssmin:dist', 'watch:dist']);    // runs only vendor build with no watcher    grunt.registerTask('vendor', ['concat:vendor', 'uglify:vendor', 'cssmin:vendor']);};